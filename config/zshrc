# vim: syntax=zsh:

# KEY {{{

zle-line-init () {
    (( ${+terminfo[smkx]} )) && echoti smkx
}

zle-line-finish () {
    (( ${+terminfo[rmkx]} )) && echoti rmkx
}

zle -N zle-line-init
zle -N zle-line-finish

bindkey -e

typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

[[ -n "${key[Home]}"     ]] && bindkey "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]] && bindkey "${key[End]}"      end-of-line
[[ -n "${key[Delete]}"   ]] && bindkey "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]] && bindkey "${key[Up]}"       up-line-or-search
[[ -n "${key[Down]}"     ]] && bindkey "${key[Down]}"     down-line-or-search
[[ -n "${key[Left]}"     ]] && bindkey "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]] && bindkey "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]] && bindkey "${key[PageUp]}"   backward-word
[[ -n "${key[PageDown]}" ]] && bindkey "${key[PageDown]}" forward-word

# }}}

# EXPORT {{{

export EDITOR=vim
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export GREP_COLORS="mt=$GREP_COLOR"
export PAGER='less'
export LESS='-R'
export LS_COLORS='di=1;34:ln=1;35:so=1;32:pi=1;33:ex=1;31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
export TERM=xterm-256color
export FZF_DEFAULT_OPTS='--height 40% --no-reverse'

# }}}

# prompt {{{

precmd() {
    psvar=()
    local git_head=((../)#.git/HEAD([1]N))
    [[ -n $git_head ]] && psvar[1]=${"$(< "$git_head")"##*/}
}


PS1=""
PS1+='%{%F{118}%}[%*] '
PS1+='%F{81}%n%f'
PS1+=' at %F{135}%m%f'
PS1+=' in %F{226}%~%f'
PS1+='%(1V. %F{243}%1v%f.)'
PS1+='%(2V. %F{180}%2v%f.)'
PS1+=$'\n'
PS1+='%(?.%F{231}.%F{196})%(!.#.❯)%f '

# }}}

# OPT {{{

HISTFILE=~/.histfile
HISTSIZE=65536
SAVEHIST=65536

unsetopt menu_complete
setopt noflowcontrol

setopt always_to_end
setopt append_history
setopt auto_menu
setopt auto_name_dirs
setopt auto_pushd
setopt autocd
setopt complete_in_word
setopt correct
setopt extended_glob
setopt extended_history
setopt hist_lex_words
setopt hist_ignore_dups
setopt inc_append_history
setopt interactivecomments
setopt mark_dirs
setopt multios
setopt prompt_subst
setopt pushd_ignore_dups
setopt pushd_minus

autoload -Uz compinit
compinit

{
    zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
    if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
        zcompile "$zcompdump"
    fi
} &!

autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# }}}

# Completions {{{
# Important
zstyle ':completion:*:default' menu yes=long select=2

# Completing Grouping
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:descriptions' format '%F{226}Completing %F{214}%d%f'
zstyle ':completion:*' group-name ''

# Completing misc
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} r:|[._-]=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}'
zstyle ':completion:*' verbose yes
zstyle ':completion:*' completer _complete
zstyle ':completion:*:*files' ignored-patterns '*?.o' '*?~' '*\#'
zstyle ':completion:*' use-cache true
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s

# Directory
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# default: --
zstyle ':completion:*' list-separator '-->'
zstyle ':completion:*:manuals' separate-sections true

# }}}

# ALIAS {{{

if ls --color -d . &>/dev/null 2>&1; then
    alias ls='ls --color=auto'
  else
    alias ls='ls -G'
fi

alias v='vim'
alias vi='vim'
alias l='ls -F'
alias ll='ls -lhF'
alias la='ls -lhaF'
alias cls='clear'
alias grep='grep --color=auto'
alias objdump='objdump -M intel'
alias p1='ssh ptt'
alias p2='ssh ptt2'
alias ta='tmux at -t'
alias tl='tmux ls'
alias rb='ruby'
alias py='python'

# Change Directory aliases
alias -- -='cd -'
alias ..='cd ..'
alias ....='cd ../..'
alias ......='cd ../../..'

# Git aliases
git_branch() {
  (command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
}

alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gb='git branch'
alias gc='git commit -v'
alias gca='git commit -a -v'
alias gcb='git checkout -b'
alias gcm='git checkout master'
alias gco='git checkout'
alias gd='git diff'
alias gf='git fetch'
alias gl='git pull origin $(git_branch)'
alias glg='git log'
alias gm='git merge'
alias gmm='git merge master'
alias gmv='git mv'
alias gp='git push origin $(git_branch)'
alias grm='git rm'
alias gst='git status'

# }}}

# OTHER {{{
compdef mosh=ssh

path=(
    $HOME/bin
    $HOME/bin/common
    $HOME/.rbenv/bin
    $HOME/.rbenv/shims
    $HOME/.pyenv/bin
    $HOME/.pyenv/shims
    /usr/local/bin
    /usr/local/sbin
    $path
)

rbenv() { eval "$(command rbenv init -)" && rbenv "$@"; }
pyenv() { eval "$(command pyenv init -)" && pyenv "$@"; }

try_source() { [[ -f $1 ]] && source $1; }
try_source ~/bin/common/ddb.sh
try_source ~/.fzf.zsh
try_source ~/dotfiles/modules/zsh-autosuggestions/zsh-autosuggestions.zsh
try_source ~/.zshrc_local

# Colorful man pages
man() {
  env \
    LESS_TERMCAP_md=$'\e[1;36m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[1;40;92m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[1;32m' \
    man "$@"
}

ssh() {
  if [ -z ${TMUX+x} ]; then
    command ssh "$@"
  else
    tmux rename-window "$*"
    command ssh "$@"
    tmux set-window-option automatic-rename "on" 1>/dev/null
  fi
}

# }}}

